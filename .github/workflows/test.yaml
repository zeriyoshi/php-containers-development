name: Tests

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Generate branch names
        id: generate_branch_names
        run: |
          echo "value=$(jq -nc \
            --argjson versions "$(curl -sSL "https://www.php.net/releases/index.php?json" \
              | jq -c "[..| objects | .supported_versions? // empty] | flatten" \
            )" \
            --argjson appendix "[\"master\"]" \
            '$versions + $appendix' \
          )" >> $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate variants
        id: generate_variants
        run: |
          echo "value=$(grep '\.PHONY:' 'Makefile' | \
            sed 's/\.PHONY: //' | \
            tr ' ' '\n' | \
            grep -vE '^(up|down|all|clean)$' | \
            jq -Rsc 'split("\n") | map(select(length > 0))' \
          )" >> $GITHUB_OUTPUT
    outputs:
      versions: ${{ steps.generate_branch_names.outputs.value }}
      variants: ${{ steps.generate_variants.outputs.value }}
  Tests:
    needs: ['Prepare']
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 20
      matrix:
        distros: ['bookworm']
        # versions: ${{ fromJson(needs.Prepare.outputs.versions) }}
        # variants: ${{ fromJson(needs.Prepare.outputs.variants) }}
        versions: ['8.3']
        variants: ['debug', 'msan', 'asan', 'ubsan']
        ts: ['nts', 'zts']
        opcache: [true, false]
        jit: ['disable', 'function', 'tracing']
        exclude:
          - opcache: false
            jit: function
          - opcache: false
            jit: tracing
          - variants: valgrind
            jit: function
          - variants: valgrind
            jit: tracing
          - variants: msan
            jit: function
          - variants: msan
            jit: tracing
          - variants: asan
            jit: function
          - variants: asan
            jit: tracing
          - variants: ubsan
            jit: function
          - variants: ubsan
            jit: tracing
    continue-on-error: true
    container:
      image: ghcr.io/${{ github.repository }}:amd64-${{ matrix.versions }}-${{ matrix.variants }}-${{ matrix.ts }}-${{ matrix.distros }}
      options: '--privileged --security-opt seccomp:unconfined --cap-add SYS_ADMIN'
    steps:
      - name: Determine informations
        id: determine_info
        run: |
          echo "nproc=$(nproc)" > $GITHUB_OUTPUT
      - name: Run tests
        working-directory: /usr/src/php
        env:
          SKIP_IO_CAPTURE_TESTS: 1
          CI_NO_IPV6: 1
          STACK_LIMIT_DEFAULTS_CHECK: 1
          SKIP_PERF_SENSITIVE: 1
          ASAN_OPTIONS: ${{ matrix.variants == 'asan' && 'exitcode=139' || '' }}
          UBSAN_OPTIONS: ${{ matrix.variants == 'ubsan' && 'print_stacktrace=1' || '' }}
          TEST_PHP_ARGS: "-j${{ steps.determine_info.outputs.nproc }} \
                          -q \
                          --offline \
                          --show-diff \
                          --no-progress \
                          -g FAIL,BORK,LEAK,XLEAK
                          ${{ format('-d opcache.enable={0}', (matrix.opcache && '1' || '0')) }} \
                          ${{ matrix.opcache && '-d opcache.enable_cli=1' || '' }} \
                          ${{ (matrix.opcache && matrix.jit != 'disabled') && format('-d opcache.jit={0}', matrix.jit) || '' }} \
                          ${{ matrix.opcache && '-d opcache.protect_memory=1' || '' }} \
                          ${{ matrix.opcache && '-d opcache.preload_user=root' || '' }} \
                          ${{ matrix.variants == 'valgrind' && '-m' || '' }} \
                          ${{ matrix.variants == 'asan' && '--asan' || '' }} \
                          ${{ matrix.variants == 'msan' && '--msan' || '' }} \
                          "
        run: |
          make test
